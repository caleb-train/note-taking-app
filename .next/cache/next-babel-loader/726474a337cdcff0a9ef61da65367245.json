{"ast":null,"code":"import * as actions from \"./actionTypes\";\nimport { axiosCall as axios } from \"../../utils\";\n/* START ACTIONS */\n\nexport var ListNotes = function ListNotes(payload) {\n  return {\n    type: actions.LIST_NOTES,\n    payload: payload\n  };\n};\nexport var GetNote = function GetNote(payload) {\n  return {\n    type: actions.GET_NOTE,\n    payload: payload\n  };\n};\nexport var CreateNote = function CreateNote(payload) {\n  return {\n    type: actions.CREATE_NOTE,\n    payload: payload\n  };\n};\nexport var UpdateNote = function UpdateNote(payload) {\n  return {\n    type: actions.UPDATE_NOTE,\n    payload: payload\n  };\n};\nexport var DeleteNote = function DeleteNote(payload) {\n  return {\n    type: actions.DELETE_NOTE,\n    payload: payload\n  };\n};\nexport var EditNote = function EditNote(payload) {\n  return {\n    type: actions.EDIT_NOTE,\n    payload: payload\n  };\n};\nexport var ErrorNote = function ErrorNote(payload) {\n  return {\n    type: actions.FETCH_ERROR,\n    payload: payload\n  };\n};\nexport var Reset = function Reset() {\n  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    type: actions.RESET,\n    payload: payload\n  };\n};\n/* END ACTIONS */\n\n/* START THUNKS */\n\nexport var ListNotesAsync = function ListNotesAsync(dispatch) {\n  dispatch(Reset());\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    path: 'notes/'\n  }).then(function (res) {\n    return dispatch(ListNotes(res.data));\n  })[\"catch\"](function (message) {\n    return dispatch(ErrorNote({\n      message: message\n    }));\n  });\n};\nexport var GetNoteAsync = function GetNoteAsync(dispatch, id) {\n  dispatch(Reset());\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    path: \"note/\".concat(id)\n  }).then(function (res) {\n    return dispatch(GetNote({\n      data: res.data,\n      editNote: res.data[0],\n      message: res.message\n    }));\n  })[\"catch\"](function (message) {\n    return dispatch(ErrorNote({\n      message: message\n    }));\n  });\n};\nexport var CreateNoteAsync = function CreateNoteAsync(dispatch, payload) {\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    method: 'POST',\n    path: \"note\",\n    payload: payload\n  }).then(function (res) {\n    return dispatch(CreateNote({\n      message: res.message\n    }));\n  })[\"catch\"](function (message) {\n    return dispatch(ErrorNote({\n      message: message\n    }));\n  });\n};\nexport var UpdateNoteAsync = function UpdateNoteAsync(dispatch, payload) {\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    method: 'PATCH',\n    path: \"note/\".concat(payload.id),\n    payload: payload\n  }).then(function (res) {\n    return dispatch(UpdateNote({\n      message: res.message\n    }));\n  })[\"catch\"](function (message) {\n    return dispatch(ErrorNote({\n      message: message\n    }));\n  });\n};\nexport var DeleteNoteAsync = function DeleteNoteAsync(dispatch, id) {\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    method: 'DELETE',\n    path: \"note/\".concat(id)\n  }).then(function (res) {\n    dispatch(DeleteNote({\n      data: [null],\n      message: res.message\n    }));\n    ListNotesAsync(dispatch);\n  })[\"catch\"](function (message) {\n    return dispatch(ErrorNote({\n      message: message\n    }));\n  });\n};\n/* END THUNKS */","map":{"version":3,"sources":["C:/Users/Ewere/Documents/challenges/seamfix/note-taking-app/client/store/actions/noteActions.js"],"names":["actions","axiosCall","axios","ListNotes","payload","type","LIST_NOTES","GetNote","GET_NOTE","CreateNote","CREATE_NOTE","UpdateNote","UPDATE_NOTE","DeleteNote","DELETE_NOTE","EditNote","EDIT_NOTE","ErrorNote","FETCH_ERROR","Reset","RESET","ListNotesAsync","dispatch","isLoading","path","then","res","data","message","GetNoteAsync","id","editNote","CreateNoteAsync","method","UpdateNoteAsync","DeleteNoteAsync"],"mappings":"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","sourcesContent":["import * as actions from './actionTypes'\r\nimport {\r\n  axiosCall as axios\r\n} from '@utils'\r\n\r\n/* START ACTIONS */\r\nexport const ListNotes = payload => ({\r\n  type: actions.LIST_NOTES,\r\n  payload\r\n})\r\n\r\nexport const GetNote = payload => ({\r\n  type: actions.GET_NOTE,\r\n  payload\r\n})\r\n\r\nexport const CreateNote = payload => ({\r\n  type: actions.CREATE_NOTE,\r\n  payload\r\n})\r\n\r\nexport const UpdateNote = payload => ({\r\n  type: actions.UPDATE_NOTE,\r\n  payload\r\n})\r\n\r\nexport const DeleteNote = payload => ({\r\n  type: actions.DELETE_NOTE,\r\n  payload\r\n})\r\n\r\n\r\nexport const EditNote = payload => ({\r\n  type: actions.EDIT_NOTE,\r\n  payload\r\n})\r\n\r\nexport const ErrorNote = payload => ({\r\n  type: actions.FETCH_ERROR,\r\n  payload\r\n})\r\n\r\nexport const Reset = (payload = {}) => ({\r\n  type: actions.RESET,\r\n  payload\r\n})\r\n/* END ACTIONS */\r\n\r\n/* START THUNKS */\r\nexport const ListNotesAsync = dispatch => {\r\n  dispatch(Reset())\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      path: 'notes/'\r\n    })\r\n    .then(res => dispatch(ListNotes(res.data)))\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\nexport const GetNoteAsync = (dispatch, id) => {\r\n  dispatch(Reset())\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      path: `note/${id}`\r\n    })\r\n    .then(res => dispatch(GetNote({\r\n      data: res.data,\r\n      editNote: res.data[0],\r\n      message: res.message\r\n    })))\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\nexport const CreateNoteAsync = (dispatch, payload) => {\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      method: 'POST',\r\n      path: `note`,\r\n      payload,\r\n    })\r\n    .then(res => dispatch(CreateNote({\r\n      message: res.message\r\n    })))\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\nexport const UpdateNoteAsync = (dispatch, payload) => {\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      method: 'PATCH',\r\n      path: `note/${payload.id}`,\r\n      payload,\r\n    })\r\n    .then(res => dispatch(UpdateNote({\r\n      message: res.message\r\n    })))\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\n\r\nexport const DeleteNoteAsync = (dispatch, id) => {\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      method: 'DELETE',\r\n      path: `note/${id}`\r\n    })\r\n    .then(res => {\r\n\r\n      dispatch(DeleteNote({\r\n        data: [null],\r\n        message: res.message\r\n      }))\r\n      ListNotesAsync(dispatch)\r\n    })\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\n/* END THUNKS */"]},"metadata":{},"sourceType":"module"}