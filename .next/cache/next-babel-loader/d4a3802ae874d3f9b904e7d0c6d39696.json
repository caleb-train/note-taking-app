{"ast":null,"code":"import * as actions from \"./actionTypes\";\nimport { axiosCall as axios } from \"../../utils\";\n/* START ACTIONS */\n\nexport var ListNotes = function ListNotes(payload) {\n  return {\n    type: actions.LIST_NOTES,\n    payload: payload\n  };\n};\nexport var GetNote = function GetNote(payload) {\n  return {\n    type: actions.GET_NOTE,\n    payload: payload\n  };\n};\nexport var CreateNote = function CreateNote(payload) {\n  return {\n    type: actions.CREATE_NOTE,\n    payload: payload\n  };\n};\nexport var UpdateNote = function UpdateNote(payload) {\n  return {\n    type: actions.UPDATE_NOTE,\n    payload: payload\n  };\n};\nexport var DeleteNote = function DeleteNote(payload) {\n  return {\n    type: actions.DELETE_NOTE,\n    payload: payload\n  };\n};\nexport var EditNote = function EditNote(payload) {\n  return {\n    type: actions.EDIT_NOTE,\n    payload: payload\n  };\n};\nexport var ErrorNote = function ErrorNote(payload) {\n  return {\n    type: actions.FETCH_ERROR,\n    payload: payload\n  };\n};\nexport var Reset = function Reset() {\n  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    type: actions.RESET,\n    payload: payload\n  };\n};\n/* END ACTIONS */\n\n/* START THUNKS */\n\nexport var ListNotesAsync = function ListNotesAsync(_) {\n  return function (dispatch) {\n    dispatch(Reset());\n    dispatch(EditNote({\n      isLoading: true\n    }));\n    console.log('ssss');\n    axios({\n      path: 'notes/'\n    }).then(function (res) {\n      return dispatch(ListNotes(res.data));\n    })[\"catch\"](function (message) {\n      return dispatch(ErrorNote({\n        message: message\n      }));\n    });\n  };\n};\nexport var GetNoteAsync = function GetNoteAsync(id) {\n  return function (dispatch) {\n    dispatch(Reset());\n    dispatch(EditNote({\n      isLoading: true\n    }));\n    axios({\n      path: \"note/\".concat(id)\n    }).then(function (res) {\n      return dispatch(GetNote({\n        data: res.data,\n        editNote: res.data[0],\n        message: res.message\n      }));\n    })[\"catch\"](function (message) {\n      return dispatch(ErrorNote({\n        message: message\n      }));\n    });\n  };\n};\nexport var CreateNoteAsync = function CreateNoteAsync(payload) {\n  return function (dispatch) {\n    dispatch(EditNote({\n      isLoading: true\n    }));\n    return axios({\n      method: 'POST',\n      path: \"note\",\n      payload: payload\n    }).then(function (res) {\n      console.log(res);\n      dispatch(CreateNote({\n        message: res.message\n      }));\n    })[\"catch\"](function (message) {\n      console.log(message);\n      dispatch(ErrorNote({\n        message: message\n      }));\n    });\n  };\n};\nexport var UpdateNoteAsync = function UpdateNoteAsync(payload) {\n  return function (dispatch) {\n    dispatch(EditNote({\n      isLoading: true\n    }));\n    axios({\n      method: 'PATCH',\n      path: \"note/\".concat(payload.id),\n      payload: payload\n    }).then(function (res) {\n      return dispatch(UpdateNote({\n        message: res.message\n      }));\n    })[\"catch\"](function (message) {\n      return dispatch(ErrorNote({\n        message: message\n      }));\n    });\n  };\n};\nexport var DeleteNoteAsync = function DeleteNoteAsync(id) {\n  return function (dispatch) {\n    dispatch(EditNote({\n      isLoading: true\n    }));\n    axios({\n      method: 'DELETE',\n      path: \"note/\".concat(id)\n    }).then(function (res) {\n      dispatch(DeleteNote({\n        data: [null],\n        message: res.message\n      }));\n      dispatch(ListNotesAsync(dispatch));\n    })[\"catch\"](function (message) {\n      return dispatch(ErrorNote({\n        message: message\n      }));\n    });\n  };\n};\n/* END THUNKS */","map":{"version":3,"sources":["C:/Users/Ewere/Documents/challenges/seamfix/note-taking-app/src/store/actions/noteActions.js"],"names":["actions","axiosCall","axios","ListNotes","payload","type","LIST_NOTES","GetNote","GET_NOTE","CreateNote","CREATE_NOTE","UpdateNote","UPDATE_NOTE","DeleteNote","DELETE_NOTE","EditNote","EDIT_NOTE","ErrorNote","FETCH_ERROR","Reset","RESET","ListNotesAsync","_","dispatch","isLoading","console","log","path","then","res","data","message","GetNoteAsync","id","editNote","CreateNoteAsync","method","UpdateNoteAsync","DeleteNoteAsync"],"mappings":"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","sourcesContent":["import * as actions from './actionTypes'\r\nimport {\r\n  axiosCall as axios\r\n} from '@utils'\r\n\r\n/* START ACTIONS */\r\nexport const ListNotes = payload => ({\r\n  type: actions.LIST_NOTES,\r\n  payload\r\n})\r\n\r\nexport const GetNote = payload => ({\r\n  type: actions.GET_NOTE,\r\n  payload\r\n})\r\n\r\nexport const CreateNote = payload => ({\r\n  type: actions.CREATE_NOTE,\r\n  payload\r\n})\r\n\r\nexport const UpdateNote = payload => ({\r\n  type: actions.UPDATE_NOTE,\r\n  payload\r\n})\r\n\r\nexport const DeleteNote = payload => ({\r\n  type: actions.DELETE_NOTE,\r\n  payload\r\n})\r\n\r\n\r\nexport const EditNote = payload => ({\r\n  type: actions.EDIT_NOTE,\r\n  payload\r\n})\r\n\r\nexport const ErrorNote = payload => ({\r\n  type: actions.FETCH_ERROR,\r\n  payload\r\n})\r\n\r\nexport const Reset = (payload = {}) => ({\r\n  type: actions.RESET,\r\n  payload\r\n})\r\n/* END ACTIONS */\r\n\r\n/* START THUNKS */\r\nexport const ListNotesAsync = _ => {\r\n  return dispatch => {\r\n    dispatch(Reset())\r\n    dispatch(EditNote({\r\n      isLoading: true\r\n    }))\r\n    console.log('ssss')\r\n    axios({\r\n        path: 'notes/'\r\n      })\r\n      .then(res => dispatch(ListNotes(res.data)))\r\n      .catch(message => dispatch(ErrorNote({\r\n        message\r\n      })))\r\n  }\r\n}\r\n\r\nexport const GetNoteAsync = (id) => {\r\n  return dispatch => {\r\n    dispatch(Reset())\r\n    dispatch(EditNote({\r\n      isLoading: true\r\n    }))\r\n    axios({\r\n        path: `note/${id}`\r\n      })\r\n      .then(res => dispatch(GetNote({\r\n        data: res.data,\r\n        editNote: res.data[0],\r\n        message: res.message\r\n      })))\r\n      .catch(message => dispatch(ErrorNote({\r\n        message\r\n      })))\r\n\r\n  }\r\n}\r\n\r\nexport const CreateNoteAsync = payload => {\r\n  return dispatch => {\r\n    dispatch(EditNote({\r\n      isLoading: true\r\n    }))\r\n    return axios({\r\n        method: 'POST',\r\n        path: `note`,\r\n        payload,\r\n      })\r\n      .then(res => {\r\n        console.log(res)\r\n        dispatch(CreateNote({\r\n          message: res.message\r\n        }))\r\n      })\r\n      .catch(message => {\r\n        console.log(message)\r\n        dispatch(ErrorNote({\r\n          message\r\n        }))\r\n      })\r\n  }\r\n}\r\n\r\nexport const UpdateNoteAsync = (payload) => {\r\n  return dispatch => {\r\n    dispatch(EditNote({\r\n      isLoading: true\r\n    }))\r\n    axios({\r\n        method: 'PATCH',\r\n        path: `note/${payload.id}`,\r\n        payload,\r\n      })\r\n      .then(res => dispatch(UpdateNote({\r\n        message: res.message\r\n      })))\r\n      .catch(message => dispatch(ErrorNote({\r\n        message\r\n      })))\r\n  }\r\n}\r\n\r\n\r\nexport const DeleteNoteAsync = (id) => {\r\n  return dispatch => {\r\n    dispatch(EditNote({\r\n      isLoading: true\r\n    }))\r\n    axios({\r\n        method: 'DELETE',\r\n        path: `note/${id}`\r\n      })\r\n      .then(res => {\r\n        dispatch(DeleteNote({\r\n          data: [null],\r\n          message: res.message\r\n        }))\r\n        dispatch(ListNotesAsync(dispatch))\r\n      })\r\n      .catch(message => dispatch(ErrorNote({\r\n        message\r\n      })))\r\n  }\r\n\r\n}\r\n\r\n/* END THUNKS */"]},"metadata":{},"sourceType":"module"}