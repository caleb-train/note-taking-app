{"ast":null,"code":"import * as actions from \"./actionTypes\";\nimport { axiosCall as axios } from \"../../utils\";\n/* START ACTIONS */\n\nexport const ListNotes = payload => ({\n  type: actions.LIST_NOTES,\n  payload\n});\nexport const GetNote = payload => ({\n  type: actions.GET_NOTE,\n  payload\n});\nexport const CreateNote = payload => ({\n  type: actions.CREATE_NOTE,\n  payload\n});\nexport const UpdateNote = payload => ({\n  type: actions.UPDATE_NOTE,\n  payload\n});\nexport const DeleteNote = payload => ({\n  type: actions.DELETE_NOTE,\n  payload\n});\nexport const EditNote = payload => ({\n  type: actions.EDIT_NOTE,\n  payload\n});\nexport const ErrorNote = payload => ({\n  type: actions.FETCH_ERROR,\n  payload\n});\nexport const Reset = (payload = {}) => ({\n  type: actions.RESET,\n  payload\n});\n/* END ACTIONS */\n\n/* START THUNKS */\n\nexport const ListNotesAsync = dispatch => {\n  dispatch(Reset());\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    path: 'notes/'\n  }).then(res => dispatch(ListNotes(res.data))).catch(message => dispatch(ErrorNote({\n    message\n  })));\n};\nexport const GetNoteAsync = (dispatch, id) => {\n  dispatch(Reset());\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    path: `note/${id}`\n  }).then(res => dispatch(GetNote({\n    data: res.data,\n    editNote: res.data[0],\n    message: res.message\n  }))).catch(message => dispatch(ErrorNote({\n    message\n  })));\n};\nexport const CreateNoteAsync = (dispatch, payload) => {\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    method: 'POST',\n    path: `note`,\n    payload\n  }).then(res => dispatch(CreateNote({\n    message: res.message\n  }))).catch(message => dispatch(ErrorNote({\n    message\n  })));\n};\nexport const UpdateNoteAsync = (dispatch, payload) => {\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    method: 'PATCH',\n    path: `note/${payload.id}`,\n    payload\n  }).then(res => dispatch(UpdateNote({\n    message: res.message\n  }))).catch(message => dispatch(ErrorNote({\n    message\n  })));\n};\nexport const DeleteNoteAsync = (dispatch, id) => {\n  dispatch(EditNote({\n    isLoading: true\n  }));\n  return axios({\n    method: 'DELETE',\n    path: `note/${id}`\n  }).then(res => {\n    dispatch(DeleteNote({\n      data: [null],\n      message: res.message\n    }));\n    ListNotesAsync(dispatch);\n  }).catch(message => dispatch(ErrorNote({\n    message\n  })));\n};\n/* END THUNKS */","map":{"version":3,"sources":["C:/Users/Ewere/Documents/challenges/seamfix/note-taking-app/client/store/actions/noteActions.js"],"names":["actions","axiosCall","axios","ListNotes","payload","type","LIST_NOTES","GetNote","GET_NOTE","CreateNote","CREATE_NOTE","UpdateNote","UPDATE_NOTE","DeleteNote","DELETE_NOTE","EditNote","EDIT_NOTE","ErrorNote","FETCH_ERROR","Reset","RESET","ListNotesAsync","dispatch","isLoading","path","then","res","data","catch","message","GetNoteAsync","id","editNote","CreateNoteAsync","method","UpdateNoteAsync","DeleteNoteAsync"],"mappings":"AAAA,OAAO,KAAKA,OAAZ;AACA,SACEC,SAAS,IAAIC,KADf;AAIA;;AACA,OAAO,MAAMC,SAAS,GAAGC,OAAO,KAAK;AACnCC,EAAAA,IAAI,EAAEL,OAAO,CAACM,UADqB;AAEnCF,EAAAA;AAFmC,CAAL,CAAzB;AAKP,OAAO,MAAMG,OAAO,GAAGH,OAAO,KAAK;AACjCC,EAAAA,IAAI,EAAEL,OAAO,CAACQ,QADmB;AAEjCJ,EAAAA;AAFiC,CAAL,CAAvB;AAKP,OAAO,MAAMK,UAAU,GAAGL,OAAO,KAAK;AACpCC,EAAAA,IAAI,EAAEL,OAAO,CAACU,WADsB;AAEpCN,EAAAA;AAFoC,CAAL,CAA1B;AAKP,OAAO,MAAMO,UAAU,GAAGP,OAAO,KAAK;AACpCC,EAAAA,IAAI,EAAEL,OAAO,CAACY,WADsB;AAEpCR,EAAAA;AAFoC,CAAL,CAA1B;AAKP,OAAO,MAAMS,UAAU,GAAGT,OAAO,KAAK;AACpCC,EAAAA,IAAI,EAAEL,OAAO,CAACc,WADsB;AAEpCV,EAAAA;AAFoC,CAAL,CAA1B;AAMP,OAAO,MAAMW,QAAQ,GAAGX,OAAO,KAAK;AAClCC,EAAAA,IAAI,EAAEL,OAAO,CAACgB,SADoB;AAElCZ,EAAAA;AAFkC,CAAL,CAAxB;AAKP,OAAO,MAAMa,SAAS,GAAGb,OAAO,KAAK;AACnCC,EAAAA,IAAI,EAAEL,OAAO,CAACkB,WADqB;AAEnCd,EAAAA;AAFmC,CAAL,CAAzB;AAKP,OAAO,MAAMe,KAAK,GAAG,CAACf,OAAO,GAAG,EAAX,MAAmB;AACtCC,EAAAA,IAAI,EAAEL,OAAO,CAACoB,KADwB;AAEtChB,EAAAA;AAFsC,CAAnB,CAAd;AAIP;;AAEA;;AACA,OAAO,MAAMiB,cAAc,GAAGC,QAAQ,IAAI;AACxCA,EAAAA,QAAQ,CAACH,KAAK,EAAN,CAAR;AACAG,EAAAA,QAAQ,CAACP,QAAQ,CAAC;AAChBQ,IAAAA,SAAS,EAAE;AADK,GAAD,CAAT,CAAR;AAGA,SAAOrB,KAAK,CAAC;AACTsB,IAAAA,IAAI,EAAE;AADG,GAAD,CAAL,CAGJC,IAHI,CAGCC,GAAG,IAAIJ,QAAQ,CAACnB,SAAS,CAACuB,GAAG,CAACC,IAAL,CAAV,CAHhB,EAIJC,KAJI,CAIEC,OAAO,IAAIP,QAAQ,CAACL,SAAS,CAAC;AACnCY,IAAAA;AADmC,GAAD,CAAV,CAJrB,CAAP;AAOD,CAZM;AAcP,OAAO,MAAMC,YAAY,GAAG,CAACR,QAAD,EAAWS,EAAX,KAAkB;AAC5CT,EAAAA,QAAQ,CAACH,KAAK,EAAN,CAAR;AACAG,EAAAA,QAAQ,CAACP,QAAQ,CAAC;AAChBQ,IAAAA,SAAS,EAAE;AADK,GAAD,CAAT,CAAR;AAGA,SAAOrB,KAAK,CAAC;AACTsB,IAAAA,IAAI,EAAG,QAAOO,EAAG;AADR,GAAD,CAAL,CAGJN,IAHI,CAGCC,GAAG,IAAIJ,QAAQ,CAACf,OAAO,CAAC;AAC5BoB,IAAAA,IAAI,EAAED,GAAG,CAACC,IADkB;AAE5BK,IAAAA,QAAQ,EAAEN,GAAG,CAACC,IAAJ,CAAS,CAAT,CAFkB;AAG5BE,IAAAA,OAAO,EAAEH,GAAG,CAACG;AAHe,GAAD,CAAR,CAHhB,EAQJD,KARI,CAQEC,OAAO,IAAIP,QAAQ,CAACL,SAAS,CAAC;AACnCY,IAAAA;AADmC,GAAD,CAAV,CARrB,CAAP;AAWD,CAhBM;AAkBP,OAAO,MAAMI,eAAe,GAAG,CAACX,QAAD,EAAWlB,OAAX,KAAuB;AACpDkB,EAAAA,QAAQ,CAACP,QAAQ,CAAC;AAChBQ,IAAAA,SAAS,EAAE;AADK,GAAD,CAAT,CAAR;AAGA,SAAOrB,KAAK,CAAC;AACTgC,IAAAA,MAAM,EAAE,MADC;AAETV,IAAAA,IAAI,EAAG,MAFE;AAGTpB,IAAAA;AAHS,GAAD,CAAL,CAKJqB,IALI,CAKCC,GAAG,IAAIJ,QAAQ,CAACb,UAAU,CAAC;AAC/BoB,IAAAA,OAAO,EAAEH,GAAG,CAACG;AADkB,GAAD,CAAX,CALhB,EAQJD,KARI,CAQEC,OAAO,IAAIP,QAAQ,CAACL,SAAS,CAAC;AACnCY,IAAAA;AADmC,GAAD,CAAV,CARrB,CAAP;AAWD,CAfM;AAiBP,OAAO,MAAMM,eAAe,GAAG,CAACb,QAAD,EAAWlB,OAAX,KAAuB;AACpDkB,EAAAA,QAAQ,CAACP,QAAQ,CAAC;AAChBQ,IAAAA,SAAS,EAAE;AADK,GAAD,CAAT,CAAR;AAGA,SAAOrB,KAAK,CAAC;AACTgC,IAAAA,MAAM,EAAE,OADC;AAETV,IAAAA,IAAI,EAAG,QAAOpB,OAAO,CAAC2B,EAAG,EAFhB;AAGT3B,IAAAA;AAHS,GAAD,CAAL,CAKJqB,IALI,CAKCC,GAAG,IAAIJ,QAAQ,CAACX,UAAU,CAAC;AAC/BkB,IAAAA,OAAO,EAAEH,GAAG,CAACG;AADkB,GAAD,CAAX,CALhB,EAQJD,KARI,CAQEC,OAAO,IAAIP,QAAQ,CAACL,SAAS,CAAC;AACnCY,IAAAA;AADmC,GAAD,CAAV,CARrB,CAAP;AAWD,CAfM;AAkBP,OAAO,MAAMO,eAAe,GAAG,CAACd,QAAD,EAAWS,EAAX,KAAkB;AAC/CT,EAAAA,QAAQ,CAACP,QAAQ,CAAC;AAChBQ,IAAAA,SAAS,EAAE;AADK,GAAD,CAAT,CAAR;AAGA,SAAOrB,KAAK,CAAC;AACTgC,IAAAA,MAAM,EAAE,QADC;AAETV,IAAAA,IAAI,EAAG,QAAOO,EAAG;AAFR,GAAD,CAAL,CAIJN,IAJI,CAICC,GAAG,IAAI;AAEXJ,IAAAA,QAAQ,CAACT,UAAU,CAAC;AAClBc,MAAAA,IAAI,EAAE,CAAC,IAAD,CADY;AAElBE,MAAAA,OAAO,EAAEH,GAAG,CAACG;AAFK,KAAD,CAAX,CAAR;AAIAR,IAAAA,cAAc,CAACC,QAAD,CAAd;AACD,GAXI,EAYJM,KAZI,CAYEC,OAAO,IAAIP,QAAQ,CAACL,SAAS,CAAC;AACnCY,IAAAA;AADmC,GAAD,CAAV,CAZrB,CAAP;AAeD,CAnBM;AAqBP","sourcesContent":["import * as actions from './actionTypes'\r\nimport {\r\n  axiosCall as axios\r\n} from '@utils'\r\n\r\n/* START ACTIONS */\r\nexport const ListNotes = payload => ({\r\n  type: actions.LIST_NOTES,\r\n  payload\r\n})\r\n\r\nexport const GetNote = payload => ({\r\n  type: actions.GET_NOTE,\r\n  payload\r\n})\r\n\r\nexport const CreateNote = payload => ({\r\n  type: actions.CREATE_NOTE,\r\n  payload\r\n})\r\n\r\nexport const UpdateNote = payload => ({\r\n  type: actions.UPDATE_NOTE,\r\n  payload\r\n})\r\n\r\nexport const DeleteNote = payload => ({\r\n  type: actions.DELETE_NOTE,\r\n  payload\r\n})\r\n\r\n\r\nexport const EditNote = payload => ({\r\n  type: actions.EDIT_NOTE,\r\n  payload\r\n})\r\n\r\nexport const ErrorNote = payload => ({\r\n  type: actions.FETCH_ERROR,\r\n  payload\r\n})\r\n\r\nexport const Reset = (payload = {}) => ({\r\n  type: actions.RESET,\r\n  payload\r\n})\r\n/* END ACTIONS */\r\n\r\n/* START THUNKS */\r\nexport const ListNotesAsync = dispatch => {\r\n  dispatch(Reset())\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      path: 'notes/'\r\n    })\r\n    .then(res => dispatch(ListNotes(res.data)))\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\nexport const GetNoteAsync = (dispatch, id) => {\r\n  dispatch(Reset())\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      path: `note/${id}`\r\n    })\r\n    .then(res => dispatch(GetNote({\r\n      data: res.data,\r\n      editNote: res.data[0],\r\n      message: res.message\r\n    })))\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\nexport const CreateNoteAsync = (dispatch, payload) => {\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      method: 'POST',\r\n      path: `note`,\r\n      payload,\r\n    })\r\n    .then(res => dispatch(CreateNote({\r\n      message: res.message\r\n    })))\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\nexport const UpdateNoteAsync = (dispatch, payload) => {\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      method: 'PATCH',\r\n      path: `note/${payload.id}`,\r\n      payload,\r\n    })\r\n    .then(res => dispatch(UpdateNote({\r\n      message: res.message\r\n    })))\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\n\r\nexport const DeleteNoteAsync = (dispatch, id) => {\r\n  dispatch(EditNote({\r\n    isLoading: true\r\n  }))\r\n  return axios({\r\n      method: 'DELETE',\r\n      path: `note/${id}`\r\n    })\r\n    .then(res => {\r\n\r\n      dispatch(DeleteNote({\r\n        data: [null],\r\n        message: res.message\r\n      }))\r\n      ListNotesAsync(dispatch)\r\n    })\r\n    .catch(message => dispatch(ErrorNote({\r\n      message\r\n    })))\r\n}\r\n\r\n/* END THUNKS */"]},"metadata":{},"sourceType":"module"}